Person = {alice}
Course = {cryptography}
ID = {id001,id002}

type(hasID(Person,ID))
type(teaches(Person,Course))

teaches(alice,cryptography)
hasID(alice,id001)
!hasID(alice,id002)
forall X:(forall Y:(hasID(X,Y) => (!(exists Z:(hasID(X,Z) && Z/==Y)))))
forall X:(forall Y:(hasID(X,Y) => (!(exists Z:(hasID(Z,Y) && Z/==X)))))
forall X:(forall Y: (teaches(X,Y) => exists Z: (hasID(X,Z)) ))







